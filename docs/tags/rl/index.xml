<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>RL on Wilbert Pumacay</title>
    <link>http://wpumacay.github.io/blog/tags/rl/</link>
    <description>Recent content in RL on Wilbert Pumacay</description>
    <generator>Hugo</generator>
    <language>en</language>
    <lastBuildDate>Wed, 08 May 2024 14:48:04 -0500</lastBuildDate>
    <atom:link href="http://wpumacay.github.io/blog/tags/rl/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>RL using Policy Gradients</title>
      <link>http://wpumacay.github.io/blog/posts/rl-policy-gradients/</link>
      <pubDate>Wed, 08 May 2024 14:48:04 -0500</pubDate>
      <guid>http://wpumacay.github.io/blog/posts/rl-policy-gradients/</guid>
      <description>This is the first post on a series dedicated to Policy Gradient based algorithms, in which we will cover the theory of how Policy Gradients work. We&amp;rsquo;ll implement the vanilla version of the REINFORCE algorithm, and use it to solve some simple tasks from Gymnasium.&#xA;0. Preliminaries Link to heading Before getting into the math of Policy Gradients, let&amp;rsquo;s define some terms that will help us make the math simpler. Let&amp;rsquo;s define a trajectory \( \tau \) as the collection of all states and actions that we get from the interaction with the environment.</description>
    </item>
  </channel>
</rss>
